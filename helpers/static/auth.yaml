openapi: 3.0.0
info:
  title: Food API
  description: API for managing food, favorite foods, and authentication.
  version: "1.0.0"
paths:
  /register:
    post:
      summary: Register a new account
      description: |
        This endpoint allows users to register a new account with an email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address for the account.
                password:
                  type: string
                  description: The password for the account.
      responses:
        "201":
          description: Account created successfully
        "400":
          description: Account already exists

  /login:
    post:
      summary: Log in to an account
      description: |
        This endpoint allows users to log in using their email and password.
        If successful, a JWT token is returned for authentication in subsequent requests.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address for the account.
                password:
                  type: string
                  description: The password for the account.
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
        "401":
          description: Invalid credentials

  /auth/accounts/{auth_id}:
    get:
      summary: Get account details
      description: |
        This endpoint retrieves details for a specific account by its ID.
        The response includes the account's email and other metadata.
      parameters:
        - name: auth_id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the account.
      responses:
        "200":
          description: Account details retrieved successfully
        "404":
          description: Account not found

    delete:
      summary: Delete an account
      description: |
        This endpoint allows users to delete their account by its ID.
        After deletion, the account will no longer be accessible.
      parameters:
        - name: auth_id
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the account to be deleted.
      responses:
        "200":
          description: Account deleted successfully
        "404":
          description: Account not found

components:
  schemas:
    Auth:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the account.
        email:
          type: string
          description: The email address of the account.
        token:
          type: string
          description: The JWT token for authentication.
